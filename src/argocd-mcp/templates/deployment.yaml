apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "argocd-mcp.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "argocd-mcp.name" . }}
    helm.sh/chart: {{ include "argocd-mcp.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "argocd-mcp.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "argocd-mcp.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: argocd-mcp
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{- toJson .Values.command }}
          args: {{- toJson .Values.args }}
          ports:
            - containerPort: 8000
          env:
            - name: ARGOCD_BASE_URL
              value: "{{ .Values.env.ARGOCD_BASE_URL }}"
            - name: ARGOCD_API_TOKEN
              valueFrom:
                secretKeyRef:
                  # You can create this secret externally OR pass via plain value below
                  name: {{ include "argocd-mcp.fullname" . }}-env
                  key: ARGOCD_API_TOKEN
          {{- with .Values.extraEnv }}
          {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: 8000
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: 8000
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          volumeMounts:
            - name: tools
              mountPath: {{ .Values.mounts.toolsPath }}
              subPath: tools.json
      volumes:
        - name: tools
          configMap:
            name: {{ include "argocd-mcp.fullname" . }}-tools
            items:
              - key: tools.json
                path: tools.json
